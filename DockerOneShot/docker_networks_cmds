        Docker networking commands : 

steps to make docker file : 

1 : base image
2 : copy all sorce files into working directory
3 run the required libraries for project
4 : write a cmd to run the file with the entry point

 : Attach -> docker attach container id -> docker ka terminal and apna computer terminal real time me connect ho jayega
 
 
docker network commands helps to communicate between the containers
docker networks are of 7 types -> 
 1 : host -> docker container ka network and host machine ka netwrok same rahega , in ports the content are same served at a time
 2 : default bridge -> make a path way between host and container
 3 : user defined bridge -> also called custom bridge
 4 : None -> docker container me koi network nhi (completely isolated)
 5 : MACVLAN -> do mac address pe communicate kr skta hai (docker swarm)
 6 :ipvlan
 7 : overlay
 
 docker swarm -> cluster of containers along between computers
 
 commands :
 ubuntu@ip-172-31-42-152:~$ echo "docker netwroks"
docker netwroks
ubuntu@ip-172-31-42-152:~$ docker network ls
NETWORK ID     NAME      DRIVER    SCOPE
d24646cf62d1   bridge    bridge    local
1f04b3829251   host      host      local
0b6f61f60215   none      null      local
ubuntu@ip-172-31-42-152:~$ echo "create an own netwrk in which -d means driver"
create an own netwrk in which -d means driver
ubuntu@ip-172-31-42-152:~$ docker network create mynetwork -d bridge
6684dc61b1cf23cfcf53277cfe4dd7b4eeaa9eef0d88153a3ec29c3d9568b5a9
ubuntu@ip-172-31-42-152:~$ docker network ls
NETWORK ID     NAME        DRIVER    SCOPE
d24646cf62d1   bridge      bridge    local
1f04b3829251   host        host      local
6684dc61b1cf   mynetwork   bridge    local
0b6f61f60215   none        null      local

project : conenction of two tier using docker network 

2025-08-05T19:43:30.420301Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '9.4.0'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.











2025-08-05T19:47:32.495035Z 0 [System] [MY-013172] [Server] Received SHUTDOWN from user <via user signal>. Shutting down mysqld (Version: 9.4.0).
2025-08-05T19:47:33.631091Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 9.4.0)  MySQL Community Server - GPL.
2025-08-05T19:47:33.631116Z 0 [System] [MY-015016] [Server] MySQL Server - end.
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ ~~
~~: command not found
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker ls
docker: 'ls' is not a docker command.
See 'docker --help'
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker images
REPOSITORY          TAG             IMAGE ID       CREATED          SIZE
flask-app-backend   latest          046653e72218   10 minutes ago   398MB
java-app            latest          14c6031755c3   25 hours ago     326MB
mysql               latest          e4a8cae2c902   2 weeks ago      921MB
mysql               <none>          fe7f726d39a6   2 weeks ago      921MB
python              3.9-slim        563a905f7a66   2 months ago     126MB
hello-world         latest          74cc54e27dc4   6 months ago     10.1kB
openjdk             17-jdk-alpine   264c9bdce361   4 years ago      326MB
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker run -d -p 5000:5000 -e MYSQL_HOST = mysql -e MYSQLflask-app-backend
docker: invalid reference format.
See 'docker run --help'.
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker run -d -p 5000:5000 -e MYSQL_HOST mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=root -e MYSQL_DB=devops flask-app-back
end:latest
ca5f62f6c51fc54da6f1e08d23415ec73aff40f8f78194cc02a0e8e8a535795e
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker ps -a
CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS                          PORTS     NAMES
ca5f62f6c51f   mysql          "docker-entrypoint.s…"   About a minute ago   Exited (1) About a minute ago             thirsty_hopper
026a263a0141   mysql          "docker-entrypoint.s…"   15 minutes ago       Exited (0) 10 minutes ago                 gifted_sammet
c5350901dcda   java-app       "java Main"              25 hours ago         Exited (0) 25 hours ago                   infallible_ritchie
6b4a52387a3e   fe7f726d39a6   "docker-entrypoint.s…"   25 hours ago         Exited (0) 25 hours ago                   pedantic_gagarin
1d9e12b815d1   hello-world    "/hello"                 25 hours ago         Exited (0) 25 hours ago                   fervent_goldberg
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker logs ca5f62fc51f
Error response from daemon: No such container: ca5f62fc51f
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker logs ca5f62f6c51f
2025-08-05 19:57:15+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 9.4.0-1.el9 started.
2025-08-05 19:57:15+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
2025-08-05 19:57:15+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 9.4.0-1.el9 started.
2025-08-05 19:57:15+00:00 [ERROR] [Entrypoint]: Database is uninitialized and password option is not specified
    You need to specify one of the following as an environment variable:
    - MYSQL_ROOT_PASSWORD
    - MYSQL_ALLOW_EMPTY_PASSWORD
    - MYSQL_RANDOM_ROOT_PASSWORD
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker images
REPOSITORY          TAG             IMAGE ID       CREATED          SIZE
flask-app-backend   latest          046653e72218   23 minutes ago   398MB
java-app            latest          14c6031755c3   25 hours ago     326MB
mysql               latest          e4a8cae2c902   2 weeks ago      921MB
mysql               <none>          fe7f726d39a6   2 weeks ago      921MB
python              3.9-slim        563a905f7a66   2 months ago     126MB
hello-world         latest          74cc54e27dc4   6 months ago     10.1kB
openjdk             17-jdk-alpine   264c9bdce361   4 years ago      326MB
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ docker create network two-tier-app -d bridge
Unable to find image 'network:latest' locally
Error response from daemon: pull access denied for network, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
ubuntu@ip-172-31-42-152:~/two-tier-flask-app$ cd ..
ubuntu@ip-172-31-42-152:~$ docker create network two-tier-app -d bridge
Unable to find image 'network:latest' locally
Error response from daemon: pull access denied for network, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
ubuntu@ip-172-31-42-152:~$ docker network create two-tier-app -d bridge
09370879b48d50082a0175e4ce5de66db5fbb2b59a5b94461bc7b1e71b83513c
ubuntu@ip-172-31-42-152:~$ ocker run -d --name mysql --network two-tier -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops mysql
Command 'ocker' not found, did you mean:
  command 'docker' from snap docker (28.1.1+1)
  command 'docker' from deb docker.io (26.1.3-0ubuntu1~24.04.1)
  command 'docker' from deb podman-docker (4.9.3+ds1-1ubuntu0.2)
See 'snap info <snapname>' for additional versions.
ubuntu@ip-172-31-42-152:~$ docker run -d --name mysql --network two-tier -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops mysql
fb5184fadc0062c2190b257bdc4b0024c099bbc1d420e6eb3876fd1c90b2b422
docker: Error response from daemon: network two-tier not found.
ubuntu@ip-172-31-42-152:~$ docker run -d --name mysql --network two-tier-app -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops mysql
docker: Error response from daemon: Conflict. The container name "/mysql" is already in use by container "fb5184fadc0062c2190b257bdc4b0024c099bbc1d420e6eb3876fd1c90b2b422". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
ubuntu@ip-172-31-42-152:~$ docker run -d --name mysql --network two-tier-app -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops mysql
docker: Error response from daemon: Conflict. The container name "/mysql" is already in use by container "fb5184fadc0062c2190b257bdc4b0024c099bbc1d420e6eb3876fd1c90b2b422". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
ubuntu@ip-172-31-42-152:~$ docker run -d -p 5000:5000 --network two-tier-app -e MYSQL_HOST mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=root -e MYSQL_DB=devops flask-app-
backend:latest
0770a6a989db06bad522ce4fa44b3c8739c787211bb48c1703cb5f3b51c5bf40
ubuntu@ip-172-31-42-152:~$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
ubuntu@ip-172-31-42-152:~$ docker network inspect two-tier-app
[
    {
        "Name": "two-tier-app",
        "Id": "09370879b48d50082a0175e4ce5de66db5fbb2b59a5b94461bc7b1e71b83513c",
        "Created": "2025-08-05T20:06:16.554553563Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.19.0.0/16",
                    "Gateway": "172.19.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]
ubuntu@ip-172-31-42-152:~$ docker run -d --name mysql --network two-tier -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops mysql++++++++++++++++^[[2~^[[2~^[[2~^[[2~^
[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2
~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~^[[2~
docker: invalid reference format.
See 'docker run --help'.
ubuntu@ip-172-31-42-152:~$ docker run -d --name mysql --network two-tier -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops mysql
docker: Error response from daemon: Conflict. The container name "/mysql" is already in use by container "fb5184fadc0062c2190b257bdc4b0024c099bbc1d420e6eb3876fd1c90b2b422". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
ubuntu@ip-172-31-42-152:~$
